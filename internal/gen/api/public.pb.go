//
//Public API
//
//The Transiter public API is based around hierarchal resources, like many REST APIs.
//This is the resource hierarchy:
//
//```
//System
// |- Agency
// |- Alert
// |- Feed
// |   |- Feed update
// |- Route
// |   |- Trip
// |       |- Vehicle with no ID
// |- Stop
// |- Transfer
// |- Vehicle with ID
//```
//
//For each resource there is a proto message type, a list endpoint, and a get endpoints.
//For stops, the message is [Stop](#stop), the list endpoint is [ListStops], and the get endpoint is [GetStop].
//
//The URLs in the HTTP API are determined by the hierarchy; thus:
//
//- List all systems has URL `/systems`,
//- Get system with ID `<system_id>` has URL `/systems/<system_id>`,
//- List all routes in the system has URL `/systems/<system_id>/routes`,
//- Get route has URL `/systems/<system_id>/routes/<route_id>`,
//
//and so on.
//
//Many resources refer to other resources across the hierarchy.
//For example, each route has an agency it is attached to.
//Each stop has a list of service maps, each of which contains a set of routes.
//In these situations the resource message contains a _reference_ to the other resource.
//The [Route](#route) message contains an agency reference, in the form of an [Agency.Reference](#agencyreference)
// message.
//These reference messages contain at least enough information to uniquely identify the resource.
//However they also contain additional information that is considered generally useful;
// thus, the [Stop.Reference](#stopreference) message contains the stop's name.
//What counts as "considered generally" is obviously very subjective and open to change.
//
//The following table summarizes all of the resources and their types.
//The right-most column describes the source_of the resource.
//The public API is a read-only API so all of the resources come from somewhere else.
//
//| Resource    | Reference type | List endpoint | Get endpoint | Source |
//| ----------- | --------------- | ---------- | ------------------ | -------|
//| [Agency](#agency)   | [Agency.Reference](#agencyreference) | [GetAgency] | [ListAgency]  | GTFS static
//| Alert       | System          | [Alert]    | [Alert.Reference]    | GTFS realtime
//| Feed        | System          |            |                    | system config
//| Feed update | Feed            |            |                    | Transiter update process
//| Route       | System          |            |                    | GTFS static
//| Trip        | Route           |            |                    | GTFS realtime
//| Stop        | System          |            |                    | GTFS static
//| System      | None            |            |                    | system config
//| Transfer    | System          |            |                    | GTFS static
//| Vehicle     | System or trip  |            |                    | GTFS realtime
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/public.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The possible search types when listing stops.
type ListStopsRequest_SearchMode int32

const (
	// Return a paginated list of stops sorted by stop ID.
	ListStopsRequest_ID ListStopsRequest_SearchMode = 0
	// Return all stops within max_distance from latitude, longitude.
	ListStopsRequest_DISTANCE ListStopsRequest_SearchMode = 1
)

// Enum value maps for ListStopsRequest_SearchMode.
var (
	ListStopsRequest_SearchMode_name = map[int32]string{
		0: "ID",
		1: "DISTANCE",
	}
	ListStopsRequest_SearchMode_value = map[string]int32{
		"ID":       0,
		"DISTANCE": 1,
	}
)

func (x ListStopsRequest_SearchMode) Enum() *ListStopsRequest_SearchMode {
	p := new(ListStopsRequest_SearchMode)
	*p = x
	return p
}

func (x ListStopsRequest_SearchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListStopsRequest_SearchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[0].Descriptor()
}

func (ListStopsRequest_SearchMode) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[0]
}

func (x ListStopsRequest_SearchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListStopsRequest_SearchMode.Descriptor instead.
func (ListStopsRequest_SearchMode) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{8, 0}
}

// Enum describing the possible statuses of a system.
type System_Status int32

const (
	// Unknown status, included for protobuf reasons.
	System_UNKNOWN System_Status = 0
	// The system is currently being installed through an asychronous install request.
	System_INSTALLING System_Status = 1
	// The system was successfully installed and is now active.
	System_ACTIVE System_Status = 2
	// The system was added through an asynchronous install request, but the install failed.
	System_INSTALL_FAILED System_Status = 3
	// The system is currently being updated through an asynchronous update request.
	System_UPDATING System_Status = 4
	// An asynchronous update of the system failed.
	System_UPDATE_FAILED System_Status = 5
	// The system is in the process of being deleted through an asynchronous delete request.
	System_DELETING System_Status = 6
)

// Enum value maps for System_Status.
var (
	System_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "INSTALLING",
		2: "ACTIVE",
		3: "INSTALL_FAILED",
		4: "UPDATING",
		5: "UPDATE_FAILED",
		6: "DELETING",
	}
	System_Status_value = map[string]int32{
		"UNKNOWN":        0,
		"INSTALLING":     1,
		"ACTIVE":         2,
		"INSTALL_FAILED": 3,
		"UPDATING":       4,
		"UPDATE_FAILED":  5,
		"DELETING":       6,
	}
)

func (x System_Status) Enum() *System_Status {
	p := new(System_Status)
	*p = x
	return p
}

func (x System_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (System_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[1].Descriptor()
}

func (System_Status) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[1]
}

func (x System_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use System_Status.Descriptor instead.
func (System_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27, 0}
}

// Enum describing the possible stop types
type Stop_Type int32

const (
	Stop_STOP             Stop_Type = 0
	Stop_STATION          Stop_Type = 1
	Stop_ENTRANCE_OR_EXIT Stop_Type = 2
	Stop_GENERIC_NODE     Stop_Type = 3
	Stop_BOARDING_AREA    Stop_Type = 4
)

// Enum value maps for Stop_Type.
var (
	Stop_Type_name = map[int32]string{
		0: "STOP",
		1: "STATION",
		2: "ENTRANCE_OR_EXIT",
		3: "GENERIC_NODE",
		4: "BOARDING_AREA",
	}
	Stop_Type_value = map[string]int32{
		"STOP":             0,
		"STATION":          1,
		"ENTRANCE_OR_EXIT": 2,
		"GENERIC_NODE":     3,
		"BOARDING_AREA":    4,
	}
)

func (x Stop_Type) Enum() *Stop_Type {
	p := new(Stop_Type)
	*p = x
	return p
}

func (x Stop_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stop_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[2].Descriptor()
}

func (Stop_Type) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[2]
}

func (x Stop_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stop_Type.Descriptor instead.
func (Stop_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30, 0}
}

// Enum describing possible policies for continuous pickup or drop-off.
type Route_ContinuousPolicy int32

const (
	// Continuous pickup or drop-off allowed.
	Route_ALLOWED Route_ContinuousPolicy = 0
	// Continuous pickup or drop-off not allowed.
	Route_NOT_ALLOWED Route_ContinuousPolicy = 1
	// Must phone the agency to arrange continuous pickup or drop-off.
	Route_PHONE_AGENCY Route_ContinuousPolicy = 2
	// Must coordinate with driver to arrange continuous pickup or drop-off.
	Route_COORDINATE_WITH_DRIVER Route_ContinuousPolicy = 3
)

// Enum value maps for Route_ContinuousPolicy.
var (
	Route_ContinuousPolicy_name = map[int32]string{
		0: "ALLOWED",
		1: "NOT_ALLOWED",
		2: "PHONE_AGENCY",
		3: "COORDINATE_WITH_DRIVER",
	}
	Route_ContinuousPolicy_value = map[string]int32{
		"ALLOWED":                0,
		"NOT_ALLOWED":            1,
		"PHONE_AGENCY":           2,
		"COORDINATE_WITH_DRIVER": 3,
	}
)

func (x Route_ContinuousPolicy) Enum() *Route_ContinuousPolicy {
	p := new(Route_ContinuousPolicy)
	*p = x
	return p
}

func (x Route_ContinuousPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Route_ContinuousPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[3].Descriptor()
}

func (Route_ContinuousPolicy) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[3]
}

func (x Route_ContinuousPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Route_ContinuousPolicy.Descriptor instead.
func (Route_ContinuousPolicy) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 0}
}

// Enum describing possible route types.
// This corresponds to possible values of the `route_type` column in `routes.txt`.
type Route_Type int32

const (
	Route_LIGHT_RAIL  Route_Type = 0
	Route_SUBWAY      Route_Type = 1
	Route_RAIL        Route_Type = 2
	Route_BUS         Route_Type = 3
	Route_FERRY       Route_Type = 4
	Route_CABLE_TRAM  Route_Type = 5
	Route_AERIAL_LIFT Route_Type = 6
	Route_FUNICULAR   Route_Type = 7
	Route_TROLLEY_BUS Route_Type = 11
	Route_MONORAIL    Route_Type = 12
	Route_UNKNOWN     Route_Type = 100
)

// Enum value maps for Route_Type.
var (
	Route_Type_name = map[int32]string{
		0:   "LIGHT_RAIL",
		1:   "SUBWAY",
		2:   "RAIL",
		3:   "BUS",
		4:   "FERRY",
		5:   "CABLE_TRAM",
		6:   "AERIAL_LIFT",
		7:   "FUNICULAR",
		11:  "TROLLEY_BUS",
		12:  "MONORAIL",
		100: "UNKNOWN",
	}
	Route_Type_value = map[string]int32{
		"LIGHT_RAIL":  0,
		"SUBWAY":      1,
		"RAIL":        2,
		"BUS":         3,
		"FERRY":       4,
		"CABLE_TRAM":  5,
		"AERIAL_LIFT": 6,
		"FUNICULAR":   7,
		"TROLLEY_BUS": 11,
		"MONORAIL":    12,
		"UNKNOWN":     100,
	}
)

func (x Route_Type) Enum() *Route_Type {
	p := new(Route_Type)
	*p = x
	return p
}

func (x Route_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Route_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[4].Descriptor()
}

func (Route_Type) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[4]
}

func (x Route_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Route_Type.Descriptor instead.
func (Route_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 1}
}

// Cause is the same as the [cause enum in the GTFS realtime
// specification](https://developers.google.com/transit/gtfs-realtime/reference#enum-cause),
// except `UNKNOWN_CAUSE` has value 0 instead of 1 to satisfy proto3 requirements.
type Alert_Cause int32

const (
	Alert_UNKNOWN_CAUSE     Alert_Cause = 0
	Alert_OTHER_CAUSE       Alert_Cause = 2
	Alert_TECHNICAL_PROBLEM Alert_Cause = 3
	Alert_STRIKE            Alert_Cause = 4
	Alert_DEMONSTRATION     Alert_Cause = 5
	Alert_ACCIDENT          Alert_Cause = 6
	Alert_HOLIDAY           Alert_Cause = 7
	Alert_WEATHER           Alert_Cause = 8
	Alert_MAINTENANCE       Alert_Cause = 9
	Alert_CONSTRUCTION      Alert_Cause = 10
	Alert_POLICE_ACTIVITY   Alert_Cause = 11
	Alert_MEDICAL_EMERGENCY Alert_Cause = 12
)

// Enum value maps for Alert_Cause.
var (
	Alert_Cause_name = map[int32]string{
		0:  "UNKNOWN_CAUSE",
		2:  "OTHER_CAUSE",
		3:  "TECHNICAL_PROBLEM",
		4:  "STRIKE",
		5:  "DEMONSTRATION",
		6:  "ACCIDENT",
		7:  "HOLIDAY",
		8:  "WEATHER",
		9:  "MAINTENANCE",
		10: "CONSTRUCTION",
		11: "POLICE_ACTIVITY",
		12: "MEDICAL_EMERGENCY",
	}
	Alert_Cause_value = map[string]int32{
		"UNKNOWN_CAUSE":     0,
		"OTHER_CAUSE":       2,
		"TECHNICAL_PROBLEM": 3,
		"STRIKE":            4,
		"DEMONSTRATION":     5,
		"ACCIDENT":          6,
		"HOLIDAY":           7,
		"WEATHER":           8,
		"MAINTENANCE":       9,
		"CONSTRUCTION":      10,
		"POLICE_ACTIVITY":   11,
		"MEDICAL_EMERGENCY": 12,
	}
)

func (x Alert_Cause) Enum() *Alert_Cause {
	p := new(Alert_Cause)
	*p = x
	return p
}

func (x Alert_Cause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alert_Cause) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[5].Descriptor()
}

func (Alert_Cause) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[5]
}

func (x Alert_Cause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alert_Cause.Descriptor instead.
func (Alert_Cause) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37, 0}
}

// Effect is the same as the [effect enum in the GTFS realtime
// specification](https://developers.google.com/transit/gtfs-realtime/reference#enum-effect),
// except `UNKNOWN_EFFECT` has value 0 instead of 1 to satisfy proto3 requirements.
type Alert_Effect int32

const (
	Alert_UNKNOWN_EFFECT      Alert_Effect = 0
	Alert_NO_SERVICE          Alert_Effect = 1
	Alert_REDUCED_SERVICE     Alert_Effect = 2
	Alert_SIGNIFICANT_DELAYS  Alert_Effect = 3
	Alert_DETOUR              Alert_Effect = 4
	Alert_ADDITIONAL_SERVICE  Alert_Effect = 5
	Alert_MODIFIED_SERVICE    Alert_Effect = 6
	Alert_OTHER_EFFECT        Alert_Effect = 7
	Alert_STOP_MOVED          Alert_Effect = 9
	Alert_NO_EFFECT           Alert_Effect = 10
	Alert_ACCESSIBILITY_ISSUE Alert_Effect = 11
)

// Enum value maps for Alert_Effect.
var (
	Alert_Effect_name = map[int32]string{
		0:  "UNKNOWN_EFFECT",
		1:  "NO_SERVICE",
		2:  "REDUCED_SERVICE",
		3:  "SIGNIFICANT_DELAYS",
		4:  "DETOUR",
		5:  "ADDITIONAL_SERVICE",
		6:  "MODIFIED_SERVICE",
		7:  "OTHER_EFFECT",
		9:  "STOP_MOVED",
		10: "NO_EFFECT",
		11: "ACCESSIBILITY_ISSUE",
	}
	Alert_Effect_value = map[string]int32{
		"UNKNOWN_EFFECT":      0,
		"NO_SERVICE":          1,
		"REDUCED_SERVICE":     2,
		"SIGNIFICANT_DELAYS":  3,
		"DETOUR":              4,
		"ADDITIONAL_SERVICE":  5,
		"MODIFIED_SERVICE":    6,
		"OTHER_EFFECT":        7,
		"STOP_MOVED":          9,
		"NO_EFFECT":           10,
		"ACCESSIBILITY_ISSUE": 11,
	}
)

func (x Alert_Effect) Enum() *Alert_Effect {
	p := new(Alert_Effect)
	*p = x
	return p
}

func (x Alert_Effect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alert_Effect) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[6].Descriptor()
}

func (Alert_Effect) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[6]
}

func (x Alert_Effect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alert_Effect.Descriptor instead.
func (Alert_Effect) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37, 1}
}

type Transfer_Type int32

const (
	Transfer_RECOMMENDED   Transfer_Type = 0
	Transfer_TIMED         Transfer_Type = 1
	Transfer_REQUIRES_TIME Transfer_Type = 2
	Transfer_NO_POSSIBLE   Transfer_Type = 3
)

// Enum value maps for Transfer_Type.
var (
	Transfer_Type_name = map[int32]string{
		0: "RECOMMENDED",
		1: "TIMED",
		2: "REQUIRES_TIME",
		3: "NO_POSSIBLE",
	}
	Transfer_Type_value = map[string]int32{
		"RECOMMENDED":   0,
		"TIMED":         1,
		"REQUIRES_TIME": 2,
		"NO_POSSIBLE":   3,
	}
)

func (x Transfer_Type) Enum() *Transfer_Type {
	p := new(Transfer_Type)
	*p = x
	return p
}

func (x Transfer_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transfer_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[7].Descriptor()
}

func (Transfer_Type) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[7]
}

func (x Transfer_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transfer_Type.Descriptor instead.
func (Transfer_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{38, 0}
}

type FeedUpdate_Result int32

const (
	// Finished succesfully.
	FeedUpdate_UPDATED FeedUpdate_Result = 0
	// The update was skipped because the downloaded data was identical to the data for the last succesful update.
	FeedUpdate_NOT_NEEDED FeedUpdate_Result = 1
	// Failed to download feed data.
	FeedUpdate_DOWNLOAD_ERROR FeedUpdate_Result = 2
	// Feed data was empty.
	FeedUpdate_EMPTY_FEED FeedUpdate_Result = 3
	// The feed configuration is invalid. This typically indicates a bug in Transiter because
	// the feed configuration is validated when the system is being installed.
	FeedUpdate_INVALID_FEED_CONFIG FeedUpdate_Result = 4
	// The parser specified in the feed configuration is invalid.
	FeedUpdate_INVALID_PARSER FeedUpdate_Result = 5
	// Failed to parse the feed data.
	// This means the feed data was corrupted or otherwise invalid.
	FeedUpdate_PARSE_ERROR FeedUpdate_Result = 6
	// Failed to update the database using the new feed data.
	// This typically indicates a bug in Transiter or a transient error connecting to the database.
	FeedUpdate_UPDATE_ERROR FeedUpdate_Result = 7
	// An internal unspecified error occured.
	FeedUpdate_INTERNAL_ERROR FeedUpdate_Result = 8
)

// Enum value maps for FeedUpdate_Result.
var (
	FeedUpdate_Result_name = map[int32]string{
		0: "UPDATED",
		1: "NOT_NEEDED",
		2: "DOWNLOAD_ERROR",
		3: "EMPTY_FEED",
		4: "INVALID_FEED_CONFIG",
		5: "INVALID_PARSER",
		6: "PARSE_ERROR",
		7: "UPDATE_ERROR",
		8: "INTERNAL_ERROR",
	}
	FeedUpdate_Result_value = map[string]int32{
		"UPDATED":             0,
		"NOT_NEEDED":          1,
		"DOWNLOAD_ERROR":      2,
		"EMPTY_FEED":          3,
		"INVALID_FEED_CONFIG": 4,
		"INVALID_PARSER":      5,
		"PARSE_ERROR":         6,
		"UPDATE_ERROR":        7,
		"INTERNAL_ERROR":      8,
	}
)

func (x FeedUpdate_Result) Enum() *FeedUpdate_Result {
	p := new(FeedUpdate_Result)
	*p = x
	return p
}

func (x FeedUpdate_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeedUpdate_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[8].Descriptor()
}

func (FeedUpdate_Result) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[8]
}

func (x FeedUpdate_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeedUpdate_Result.Descriptor instead.
func (FeedUpdate_Result) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{39, 0}
}

// Request payload for the entrypoint endpoint.
type EntrypointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EntrypointRequest) Reset() {
	*x = EntrypointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointRequest) ProtoMessage() {}

func (x *EntrypointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointRequest.ProtoReflect.Descriptor instead.
func (*EntrypointRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{0}
}

// Response payload for the entrypoint endpoint.
type EntrypointReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version and other information about this Transiter binary.
	Transiter *EntrypointReply_TransiterDetails `protobuf:"bytes,1,opt,name=transiter,proto3" json:"transiter,omitempty"`
	// Systems that are installed in this Transiter instance.
	Systems *ChildResources `protobuf:"bytes,2,opt,name=systems,proto3" json:"systems,omitempty"`
}

func (x *EntrypointReply) Reset() {
	*x = EntrypointReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply) ProtoMessage() {}

func (x *EntrypointReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply.ProtoReflect.Descriptor instead.
func (*EntrypointReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1}
}

func (x *EntrypointReply) GetTransiter() *EntrypointReply_TransiterDetails {
	if x != nil {
		return x.Transiter
	}
	return nil
}

func (x *EntrypointReply) GetSystems() *ChildResources {
	if x != nil {
		return x.Systems
	}
	return nil
}

// Request payload for the list systems endpoint.
type ListSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSystemsRequest) Reset() {
	*x = ListSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsRequest) ProtoMessage() {}

func (x *ListSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{2}
}

// Response payload for the list systems endpoint.
type ListSystemsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of systems.
	Systems []*System `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"`
}

func (x *ListSystemsReply) Reset() {
	*x = ListSystemsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsReply) ProtoMessage() {}

func (x *ListSystemsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsReply.ProtoReflect.Descriptor instead.
func (*ListSystemsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{3}
}

func (x *ListSystemsReply) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

// Request payload for the get system endpoint.
type GetSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system to get.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *GetSystemRequest) Reset() {
	*x = GetSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemRequest) ProtoMessage() {}

func (x *GetSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemRequest.ProtoReflect.Descriptor instead.
func (*GetSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{4}
}

func (x *GetSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

// Request payload for the list agencies endpoint.
type ListAgenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system for which to list agencies.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListAgenciesRequest) Reset() {
	*x = ListAgenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgenciesRequest) ProtoMessage() {}

func (x *ListAgenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgenciesRequest.ProtoReflect.Descriptor instead.
func (*ListAgenciesRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{5}
}

func (x *ListAgenciesRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

// Response payload for the list agencies endpoint.
type ListAgenciesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of agencies.
	Agencies []*Agency `protobuf:"bytes,1,rep,name=agencies,proto3" json:"agencies,omitempty"`
}

func (x *ListAgenciesReply) Reset() {
	*x = ListAgenciesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgenciesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgenciesReply) ProtoMessage() {}

func (x *ListAgenciesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgenciesReply.ProtoReflect.Descriptor instead.
func (*ListAgenciesReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{6}
}

func (x *ListAgenciesReply) GetAgencies() []*Agency {
	if x != nil {
		return x.Agencies
	}
	return nil
}

// Request payload for the get agency endpoint.
type GetAgencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the agency is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the agency.
	//
	// This is a URL parameter in the HTTP API.
	AgencyId string `protobuf:"bytes,2,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
}

func (x *GetAgencyRequest) Reset() {
	*x = GetAgencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgencyRequest) ProtoMessage() {}

func (x *GetAgencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgencyRequest.ProtoReflect.Descriptor instead.
func (*GetAgencyRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{7}
}

func (x *GetAgencyRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetAgencyRequest) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

// Request payload for the list stops endpoint.
type ListStopsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system for which to list stops.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// If true, only return stops whose IDs are specified in the repeated `id` field.
	OnlyReturnSpecifiedIds bool `protobuf:"varint,8,opt,name=only_return_specified_ids,json=onlyReturnSpecifiedIds,proto3" json:"only_return_specified_ids,omitempty"`
	// IDs to return if `only_return_specified_ids` is set to true. It is an error to
	// populate this field if `only_return_specified_ids` is false.
	Id []string `protobuf:"bytes,9,rep,name=id,proto3" json:"id,omitempty"`
	// ID of the first stop to return. If not set, the stop with the smallest ID will be first.
	FirstId *string `protobuf:"bytes,2,opt,name=first_id,json=firstId,proto3,oneof" json:"first_id,omitempty"`
	// Maximum number of stops to return.
	Limit *int32 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	// If true, the stop times field will not be populated.
	// This will generally make the response faster to generate.
	SkipStopTimes bool `protobuf:"varint,4,opt,name=skip_stop_times,json=skipStopTimes,proto3" json:"skip_stop_times,omitempty"`
	// If true, the service maps field will not be populated.
	// This will generally make the response faster to generate.
	SkipServiceMaps bool `protobuf:"varint,5,opt,name=skip_service_maps,json=skipServiceMaps,proto3" json:"skip_service_maps,omitempty"`
	// If true, the alerts field will not be populated.
	// This will generally make the response faster to generate.
	SkipAlerts bool `protobuf:"varint,6,opt,name=skip_alerts,json=skipAlerts,proto3" json:"skip_alerts,omitempty"`
	// If true, the transfers field will not be populated.
	// This will generally make the response faster to generate.
	SkipTransfers bool `protobuf:"varint,7,opt,name=skip_transfers,json=skipTransfers,proto3" json:"skip_transfers,omitempty"`
	// The maximum distance in kilometers that a stop must be from
	// latitude, longitude to be listed when using DISTANCE search mode.
	MaxDistance *float64 `protobuf:"fixed64,10,opt,name=max_distance,json=maxDistance,proto3,oneof" json:"max_distance,omitempty"`
	// The latitude relative to the returned stops when using DISTANCE search mode.
	Latitude *float64 `protobuf:"fixed64,11,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	// The longitude relative to the returned stops when using DISTANCE search mode.
	Longitude *float64 `protobuf:"fixed64,12,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	// The type of search to perform when listing stops.
	SearchMode *ListStopsRequest_SearchMode `protobuf:"varint,13,opt,name=search_mode,json=searchMode,proto3,enum=ListStopsRequest_SearchMode,oneof" json:"search_mode,omitempty"`
}

func (x *ListStopsRequest) Reset() {
	*x = ListStopsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStopsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStopsRequest) ProtoMessage() {}

func (x *ListStopsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStopsRequest.ProtoReflect.Descriptor instead.
func (*ListStopsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{8}
}

func (x *ListStopsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListStopsRequest) GetOnlyReturnSpecifiedIds() bool {
	if x != nil {
		return x.OnlyReturnSpecifiedIds
	}
	return false
}

func (x *ListStopsRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListStopsRequest) GetFirstId() string {
	if x != nil && x.FirstId != nil {
		return *x.FirstId
	}
	return ""
}

func (x *ListStopsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListStopsRequest) GetSkipStopTimes() bool {
	if x != nil {
		return x.SkipStopTimes
	}
	return false
}

func (x *ListStopsRequest) GetSkipServiceMaps() bool {
	if x != nil {
		return x.SkipServiceMaps
	}
	return false
}

func (x *ListStopsRequest) GetSkipAlerts() bool {
	if x != nil {
		return x.SkipAlerts
	}
	return false
}

func (x *ListStopsRequest) GetSkipTransfers() bool {
	if x != nil {
		return x.SkipTransfers
	}
	return false
}

func (x *ListStopsRequest) GetMaxDistance() float64 {
	if x != nil && x.MaxDistance != nil {
		return *x.MaxDistance
	}
	return 0
}

func (x *ListStopsRequest) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *ListStopsRequest) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *ListStopsRequest) GetSearchMode() ListStopsRequest_SearchMode {
	if x != nil && x.SearchMode != nil {
		return *x.SearchMode
	}
	return ListStopsRequest_ID
}

// Response payload for the list stops endpoint.
type ListStopsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of stops.
	Stops []*Stop `protobuf:"bytes,1,rep,name=stops,proto3" json:"stops,omitempty"`
	// ID of the next stop to return, if there are more results.
	NextId *string `protobuf:"bytes,2,opt,name=next_id,json=nextId,proto3,oneof" json:"next_id,omitempty"`
}

func (x *ListStopsReply) Reset() {
	*x = ListStopsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStopsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStopsReply) ProtoMessage() {}

func (x *ListStopsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStopsReply.ProtoReflect.Descriptor instead.
func (*ListStopsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{9}
}

func (x *ListStopsReply) GetStops() []*Stop {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *ListStopsReply) GetNextId() string {
	if x != nil && x.NextId != nil {
		return *x.NextId
	}
	return ""
}

// Reqeust payload for the get stop endpoint.
type GetStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the stop is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the stop.
	//
	// This is a URL parameter in the HTTP API.
	StopId string `protobuf:"bytes,2,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
	// If true, the stop times field will not be populated.
	// This will generally make the response faster to generate.
	SkipStopTimes bool `protobuf:"varint,4,opt,name=skip_stop_times,json=skipStopTimes,proto3" json:"skip_stop_times,omitempty"`
	// If true, the service maps field will not be populated.
	// This will generally make the response faster to generate.
	SkipServiceMaps bool `protobuf:"varint,5,opt,name=skip_service_maps,json=skipServiceMaps,proto3" json:"skip_service_maps,omitempty"`
	// If true, the alerts field will not be populated.
	// This will generally make the response faster to generate.
	SkipAlerts bool `protobuf:"varint,6,opt,name=skip_alerts,json=skipAlerts,proto3" json:"skip_alerts,omitempty"`
	// If true, the transfers field will not be populated.
	// This will generally make the response faster to generate.
	SkipTransfers bool `protobuf:"varint,7,opt,name=skip_transfers,json=skipTransfers,proto3" json:"skip_transfers,omitempty"`
}

func (x *GetStopRequest) Reset() {
	*x = GetStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStopRequest) ProtoMessage() {}

func (x *GetStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStopRequest.ProtoReflect.Descriptor instead.
func (*GetStopRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{10}
}

func (x *GetStopRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetStopRequest) GetStopId() string {
	if x != nil {
		return x.StopId
	}
	return ""
}

func (x *GetStopRequest) GetSkipStopTimes() bool {
	if x != nil {
		return x.SkipStopTimes
	}
	return false
}

func (x *GetStopRequest) GetSkipServiceMaps() bool {
	if x != nil {
		return x.SkipServiceMaps
	}
	return false
}

func (x *GetStopRequest) GetSkipAlerts() bool {
	if x != nil {
		return x.SkipAlerts
	}
	return false
}

func (x *GetStopRequest) GetSkipTransfers() bool {
	if x != nil {
		return x.SkipTransfers
	}
	return false
}

// Request payload for the list routes endpoint.
type ListRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system for which to list routes.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// If true, the estimated headway fields will not be populated.
	// This will generally make the response faster to generate.
	SkipEstimatedHeadways bool `protobuf:"varint,2,opt,name=skip_estimated_headways,json=skipEstimatedHeadways,proto3" json:"skip_estimated_headways,omitempty"`
	// If true, the service maps field will not be populated.
	// This will generally make the response faster to generate.
	SkipServiceMaps bool `protobuf:"varint,3,opt,name=skip_service_maps,json=skipServiceMaps,proto3" json:"skip_service_maps,omitempty"`
	// If true, the alerts field will not be populated.
	// This will generally make the response faster to generate.
	SkipAlerts bool `protobuf:"varint,4,opt,name=skip_alerts,json=skipAlerts,proto3" json:"skip_alerts,omitempty"`
}

func (x *ListRoutesRequest) Reset() {
	*x = ListRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesRequest) ProtoMessage() {}

func (x *ListRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesRequest.ProtoReflect.Descriptor instead.
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{11}
}

func (x *ListRoutesRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListRoutesRequest) GetSkipEstimatedHeadways() bool {
	if x != nil {
		return x.SkipEstimatedHeadways
	}
	return false
}

func (x *ListRoutesRequest) GetSkipServiceMaps() bool {
	if x != nil {
		return x.SkipServiceMaps
	}
	return false
}

func (x *ListRoutesRequest) GetSkipAlerts() bool {
	if x != nil {
		return x.SkipAlerts
	}
	return false
}

// Response payload for the list routes endpoint.
type ListRoutesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of routes.
	Routes []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *ListRoutesReply) Reset() {
	*x = ListRoutesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesReply) ProtoMessage() {}

func (x *ListRoutesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesReply.ProtoReflect.Descriptor instead.
func (*ListRoutesReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{12}
}

func (x *ListRoutesReply) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

// Request payload for the get route endpoint.
type GetRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the route is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the route.
	//
	// This is a URL parameter in the HTTP API.
	RouteId string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	// If true, the estimated headway field will not be populated.
	// This will generally make the response faster to generate.
	SkipEstimatedHeadways bool `protobuf:"varint,3,opt,name=skip_estimated_headways,json=skipEstimatedHeadways,proto3" json:"skip_estimated_headways,omitempty"`
	// If true, the service maps field will not be populated.
	// This will generally make the response faster to generate.
	SkipServiceMaps bool `protobuf:"varint,4,opt,name=skip_service_maps,json=skipServiceMaps,proto3" json:"skip_service_maps,omitempty"`
	// If true, the alerts field will not be populated.
	// This will generally make the response faster to generate.
	SkipAlerts bool `protobuf:"varint,5,opt,name=skip_alerts,json=skipAlerts,proto3" json:"skip_alerts,omitempty"`
}

func (x *GetRouteRequest) Reset() {
	*x = GetRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteRequest) ProtoMessage() {}

func (x *GetRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteRequest.ProtoReflect.Descriptor instead.
func (*GetRouteRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{13}
}

func (x *GetRouteRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetRouteRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *GetRouteRequest) GetSkipEstimatedHeadways() bool {
	if x != nil {
		return x.SkipEstimatedHeadways
	}
	return false
}

func (x *GetRouteRequest) GetSkipServiceMaps() bool {
	if x != nil {
		return x.SkipServiceMaps
	}
	return false
}

func (x *GetRouteRequest) GetSkipAlerts() bool {
	if x != nil {
		return x.SkipAlerts
	}
	return false
}

// Request payload for the list trips endpoint.
type ListTripsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the route is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the route for which to list trips
	//
	// This is a URL parameter in the HTTP API.
	RouteId string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *ListTripsRequest) Reset() {
	*x = ListTripsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTripsRequest) ProtoMessage() {}

func (x *ListTripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTripsRequest.ProtoReflect.Descriptor instead.
func (*ListTripsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{14}
}

func (x *ListTripsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListTripsRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// Response payload for the list trips endpoint.
type ListTripsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of trips.
	Trips []*Trip `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
}

func (x *ListTripsReply) Reset() {
	*x = ListTripsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTripsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTripsReply) ProtoMessage() {}

func (x *ListTripsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTripsReply.ProtoReflect.Descriptor instead.
func (*ListTripsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{15}
}

func (x *ListTripsReply) GetTrips() []*Trip {
	if x != nil {
		return x.Trips
	}
	return nil
}

// Request payload for the list alerts endpoint.
type ListAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system for which to list alerts.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// If non-empty, only alerts with the provided IDs are returned.
	// This is interpreted as a filtering condition, so it is not an error to provide non-existent IDs.
	//
	// If empty, all alerts in the system are returned.
	// TODO: add a boolean filter_on_alert_ids field
	AlertId []string `protobuf:"bytes,2,rep,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
}

func (x *ListAlertsRequest) Reset() {
	*x = ListAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsRequest) ProtoMessage() {}

func (x *ListAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsRequest.ProtoReflect.Descriptor instead.
func (*ListAlertsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{16}
}

func (x *ListAlertsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListAlertsRequest) GetAlertId() []string {
	if x != nil {
		return x.AlertId
	}
	return nil
}

// Response payload for the list alerts endpoiont.
type ListAlertsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of alerts.
	Alerts []*Alert `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *ListAlertsReply) Reset() {
	*x = ListAlertsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsReply) ProtoMessage() {}

func (x *ListAlertsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsReply.ProtoReflect.Descriptor instead.
func (*ListAlertsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{17}
}

func (x *ListAlertsReply) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

// Request payload for the get alert endpoint.
type GetAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the alert is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the alert.
	//
	// This is a URL parameter in the HTTP API.
	AlertId string `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
}

func (x *GetAlertRequest) Reset() {
	*x = GetAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRequest) ProtoMessage() {}

func (x *GetAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{18}
}

func (x *GetAlertRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetAlertRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

// Request payload for the get trip endpoint.
type GetTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the trip is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the route the trip is in.
	//
	// This is a URL parameter in the HTTP API.
	RouteId string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	// ID of the route.
	//
	// This is a URL parameter in the HTTP API.
	TripId string `protobuf:"bytes,3,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
}

func (x *GetTripRequest) Reset() {
	*x = GetTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripRequest) ProtoMessage() {}

func (x *GetTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripRequest.ProtoReflect.Descriptor instead.
func (*GetTripRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{19}
}

func (x *GetTripRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetTripRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *GetTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

// Request payload for the list feeds endpoint.
type ListFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system for which to list feeds.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListFeedsRequest) Reset() {
	*x = ListFeedsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedsRequest) ProtoMessage() {}

func (x *ListFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedsRequest.ProtoReflect.Descriptor instead.
func (*ListFeedsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{20}
}

func (x *ListFeedsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

// Response payload for the list feeds endpoint.
type ListFeedsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of feeds.
	Feeds []*Feed `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *ListFeedsReply) Reset() {
	*x = ListFeedsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedsReply) ProtoMessage() {}

func (x *ListFeedsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedsReply.ProtoReflect.Descriptor instead.
func (*ListFeedsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{21}
}

func (x *ListFeedsReply) GetFeeds() []*Feed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

// Request payload for the list feed updates endpoint.
type ListFeedUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the feed is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the feed for which to list updates.
	//
	// This is a URL parameter in the HTTP API.
	FeedId string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *ListFeedUpdatesRequest) Reset() {
	*x = ListFeedUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedUpdatesRequest) ProtoMessage() {}

func (x *ListFeedUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedUpdatesRequest.ProtoReflect.Descriptor instead.
func (*ListFeedUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{22}
}

func (x *ListFeedUpdatesRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListFeedUpdatesRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

// Response payload for the list feed updates endpoint.
type ListFeedUpdatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of updates.
	Updates []*FeedUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *ListFeedUpdatesReply) Reset() {
	*x = ListFeedUpdatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedUpdatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedUpdatesReply) ProtoMessage() {}

func (x *ListFeedUpdatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedUpdatesReply.ProtoReflect.Descriptor instead.
func (*ListFeedUpdatesReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{23}
}

func (x *ListFeedUpdatesReply) GetUpdates() []*FeedUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

// Request payload for the get feed endpoint.
type GetFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system the feed is in.
	//
	// This is a URL parameter in the HTTP API.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// ID of the feed.
	//
	// This is a URL parameter in the HTTP API.
	FeedId string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *GetFeedRequest) Reset() {
	*x = GetFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedRequest) ProtoMessage() {}

func (x *GetFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedRequest.ProtoReflect.Descriptor instead.
func (*GetFeedRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{24}
}

func (x *GetFeedRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetFeedRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

// Request payload for the list transfers endpoint.
type ListTransfersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system for which to list transfers.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListTransfersRequest) Reset() {
	*x = ListTransfersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransfersRequest) ProtoMessage() {}

func (x *ListTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransfersRequest.ProtoReflect.Descriptor instead.
func (*ListTransfersRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{25}
}

func (x *ListTransfersRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

// Response payload for the list transfers endpoint.
type ListTransfersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of transfers.
	Transfers []*Transfer `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *ListTransfersReply) Reset() {
	*x = ListTransfersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransfersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransfersReply) ProtoMessage() {}

func (x *ListTransfersReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransfersReply.ProtoReflect.Descriptor instead.
func (*ListTransfersReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{26}
}

func (x *ListTransfersReply) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

// The System resource.
type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the system as specified in the install request.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the system resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// Name of the system as specified in the system configuration file.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Status of the system.
	Status    System_Status   `protobuf:"varint,5,opt,name=status,proto3,enum=System_Status" json:"status,omitempty"`
	Agencies  *ChildResources `protobuf:"bytes,6,opt,name=agencies,proto3" json:"agencies,omitempty"`
	Feeds     *ChildResources `protobuf:"bytes,7,opt,name=feeds,proto3" json:"feeds,omitempty"`
	Routes    *ChildResources `protobuf:"bytes,8,opt,name=routes,proto3" json:"routes,omitempty"`
	Stops     *ChildResources `protobuf:"bytes,9,opt,name=stops,proto3" json:"stops,omitempty"`
	Transfers *ChildResources `protobuf:"bytes,10,opt,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27}
}

func (x *System) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *System) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *System) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *System) GetStatus() System_Status {
	if x != nil {
		return x.Status
	}
	return System_UNKNOWN
}

func (x *System) GetAgencies() *ChildResources {
	if x != nil {
		return x.Agencies
	}
	return nil
}

func (x *System) GetFeeds() *ChildResources {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *System) GetRoutes() *ChildResources {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *System) GetStops() *ChildResources {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *System) GetTransfers() *ChildResources {
	if x != nil {
		return x.Transfers
	}
	return nil
}

// The resource message contains generic metadata that applies to all resources.
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string  `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Href *string `protobuf:"bytes,2,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{28}
}

func (x *Resource) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Resource) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// Description of a collection of child resources for a resource.
// This message and fields using this message exist to support API discoverability.
type ChildResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of child resources.
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// URL of the endpoint to list child resources.
	Href *string `protobuf:"bytes,2,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *ChildResources) Reset() {
	*x = ChildResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildResources) ProtoMessage() {}

func (x *ChildResources) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildResources.ProtoReflect.Descriptor instead.
func (*ChildResources) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{29}
}

func (x *ChildResources) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ChildResources) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// The Stop resource.
//
// This resource corresponds to the [stop type in the GTFS static
// specification](https://developers.google.com/transit/gtfs/reference#stopstxt).
// Most of the static fields in the resource come directly from the `stops.txt` table.
// Transiter adds some additional related fields (transfers, alerts, stop times)
//
//	and computed fields (service maps).
type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the stop. This is the `stop_id` column in `stops.txt`.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the stop resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// System corresponding to this stop.
	// This is the parent resource in Transiter's resource hierarchy.
	System *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	// Code of the stop. This is the `stop_code` column in `stops.txt`.
	Code *string `protobuf:"bytes,4,opt,name=code,proto3,oneof" json:"code,omitempty"`
	// Name of the stop. This is the `stop_name` column in `stops.txt`.
	Name *string `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of the stop. This is the `stop_desc` column in `stops.txt`.
	Description *string `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Zone ID of the stop. This is the `zone_id` column in `stops.txt`.
	ZoneId *string `protobuf:"bytes,7,opt,name=zone_id,json=zoneId,proto3,oneof" json:"zone_id,omitempty"`
	// Latitude of the stop. This is the `stop_lat` column in `stops.txt`.
	Latitude *float64 `protobuf:"fixed64,8,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	// Longitude of the stop. This is the `stop_lon` column in `stops.txt`.
	Longitude *float64 `protobuf:"fixed64,9,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	// URL of a webpage about the stop. This is the `stop_url` column in `stops.txt`.
	Url *string `protobuf:"bytes,10,opt,name=url,proto3,oneof" json:"url,omitempty"`
	// Type of the stop. This is the `platform_type` column in `stops.txt`.
	Type Stop_Type `protobuf:"varint,11,opt,name=type,proto3,enum=Stop_Type" json:"type,omitempty"`
	// Parent stop. This is determined using the `parent_station` column in `stops.txt`.
	ParentStop *Stop_Reference `protobuf:"bytes,12,opt,name=parent_stop,json=parentStop,proto3,oneof" json:"parent_stop,omitempty"`
	// Child stops. This are determined using the `parent_station` column in `stops.txt`.
	ChildStops []*Stop_Reference `protobuf:"bytes,13,rep,name=child_stops,json=childStops,proto3" json:"child_stops,omitempty"`
	// Timezone of the stop. This is the `stop_timezone` column in `stops.txt`.
	Timezone *string `protobuf:"bytes,14,opt,name=timezone,proto3,oneof" json:"timezone,omitempty"`
	// If there is wheelchair boarding for this stop. This is the `wheelchair_boarding` column in `stops.txt`.
	WheelchairBoarding *bool `protobuf:"varint,15,opt,name=wheelchair_boarding,json=wheelchairBoarding,proto3,oneof" json:"wheelchair_boarding,omitempty"`
	// Platform code of the stop. This is the `platform_code` column in `stops.txt`.
	PlatformCode *string `protobuf:"bytes,16,opt,name=platform_code,json=platformCode,proto3,oneof" json:"platform_code,omitempty"`
	// List of service maps for this stop.
	ServiceMaps []*Stop_ServiceMap `protobuf:"bytes,17,rep,name=service_maps,json=serviceMaps,proto3" json:"service_maps,omitempty"`
	// Active alerts for this stop.
	//
	// These are determined using the `informed_entity` field in
	// the [GTFS realtime alerts
	// message](https://developers.google.com/transit/gtfs-realtime/reference#message-alert).
	Alerts []*Alert_Reference `protobuf:"bytes,18,rep,name=alerts,proto3" json:"alerts,omitempty"`
	// List of realtime stop times for this stop.
	//
	// A stop time is an event at which a trip calls at a stop.
	StopTimes []*StopTime `protobuf:"bytes,19,rep,name=stop_times,json=stopTimes,proto3" json:"stop_times,omitempty"`
	// Transfers out of this stop.
	//
	// These are determined using the `from_stop_id` field in the GTFS static `transfers.txt` file.
	Transfers []*Transfer `protobuf:"bytes,20,rep,name=transfers,proto3" json:"transfers,omitempty"`
	// List of headsign rules for this stop.
	HeadsignRules []*Stop_HeadsignRule `protobuf:"bytes,21,rep,name=headsign_rules,json=headsignRules,proto3" json:"headsign_rules,omitempty"`
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30}
}

func (x *Stop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stop) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Stop) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Stop) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Stop) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Stop) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Stop) GetZoneId() string {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return ""
}

func (x *Stop) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *Stop) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *Stop) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Stop) GetType() Stop_Type {
	if x != nil {
		return x.Type
	}
	return Stop_STOP
}

func (x *Stop) GetParentStop() *Stop_Reference {
	if x != nil {
		return x.ParentStop
	}
	return nil
}

func (x *Stop) GetChildStops() []*Stop_Reference {
	if x != nil {
		return x.ChildStops
	}
	return nil
}

func (x *Stop) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

func (x *Stop) GetWheelchairBoarding() bool {
	if x != nil && x.WheelchairBoarding != nil {
		return *x.WheelchairBoarding
	}
	return false
}

func (x *Stop) GetPlatformCode() string {
	if x != nil && x.PlatformCode != nil {
		return *x.PlatformCode
	}
	return ""
}

func (x *Stop) GetServiceMaps() []*Stop_ServiceMap {
	if x != nil {
		return x.ServiceMaps
	}
	return nil
}

func (x *Stop) GetAlerts() []*Alert_Reference {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Stop) GetStopTimes() []*StopTime {
	if x != nil {
		return x.StopTimes
	}
	return nil
}

func (x *Stop) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *Stop) GetHeadsignRules() []*Stop_HeadsignRule {
	if x != nil {
		return x.HeadsignRules
	}
	return nil
}

// Message describing a realtime stop time.
//
// A stop time is an event in which a trip calls at a stop.
// This message corresponds to the [GTFS realtime `StopTimeUpdate`
// message](https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeupdate)
type StopTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The stop.
	Stop *Stop_Reference `protobuf:"bytes,1,opt,name=stop,proto3" json:"stop,omitempty"`
	// The trip.
	Trip *Trip_Reference `protobuf:"bytes,2,opt,name=trip,proto3" json:"trip,omitempty"`
	// Arrival time.
	Arrival *StopTime_EstimatedTime `protobuf:"bytes,3,opt,name=arrival,proto3" json:"arrival,omitempty"`
	// Departure time.
	Departure *StopTime_EstimatedTime `protobuf:"bytes,4,opt,name=departure,proto3" json:"departure,omitempty"`
	// If this stop time is in the future.
	// This field is *not* based on the arrival or departure time.
	// Instead, a stop time is considered in the future if it appeared in the most recent
	// GTFS realtime feed for its trip.
	// When this stop time disappears from the trip, Transiter marks it as past and freezes
	// its data.
	Future bool `protobuf:"varint,5,opt,name=future,proto3" json:"future,omitempty"`
	// Stop sequence.
	StopSequence int32 `protobuf:"varint,6,opt,name=stop_sequence,json=stopSequence,proto3" json:"stop_sequence,omitempty"`
	// Headsign.
	Headsign *string `protobuf:"bytes,7,opt,name=headsign,proto3,oneof" json:"headsign,omitempty"`
	// Track, from the NYCT realtime extension.
	Track *string `protobuf:"bytes,8,opt,name=track,proto3,oneof" json:"track,omitempty"`
}

func (x *StopTime) Reset() {
	*x = StopTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTime) ProtoMessage() {}

func (x *StopTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTime.ProtoReflect.Descriptor instead.
func (*StopTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{31}
}

func (x *StopTime) GetStop() *Stop_Reference {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *StopTime) GetTrip() *Trip_Reference {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *StopTime) GetArrival() *StopTime_EstimatedTime {
	if x != nil {
		return x.Arrival
	}
	return nil
}

func (x *StopTime) GetDeparture() *StopTime_EstimatedTime {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *StopTime) GetFuture() bool {
	if x != nil {
		return x.Future
	}
	return false
}

func (x *StopTime) GetStopSequence() int32 {
	if x != nil {
		return x.StopSequence
	}
	return 0
}

func (x *StopTime) GetHeadsign() string {
	if x != nil && x.Headsign != nil {
		return *x.Headsign
	}
	return ""
}

func (x *StopTime) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the trip resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// Route corresponding to this trip.
	// This is the parent resource in Transiter's resource hierarchy.
	// It is determined using the `route_id` field in the GTFS realtime feed.
	Route       *Route_Reference   `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`
	StartedAt   *int64             `protobuf:"varint,4,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	Vehicle     *Vehicle_Reference `protobuf:"bytes,5,opt,name=vehicle,proto3,oneof" json:"vehicle,omitempty"`
	DirectionId bool               `protobuf:"varint,6,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	StopTimes   []*StopTime        `protobuf:"bytes,7,rep,name=stop_times,json=stopTimes,proto3" json:"stop_times,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{32}
}

func (x *Trip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trip) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Trip) GetRoute() *Route_Reference {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *Trip) GetStartedAt() int64 {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return 0
}

func (x *Trip) GetVehicle() *Vehicle_Reference {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *Trip) GetDirectionId() bool {
	if x != nil {
		return x.DirectionId
	}
	return false
}

func (x *Trip) GetStopTimes() []*StopTime {
	if x != nil {
		return x.StopTimes
	}
	return nil
}

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{33}
}

// The Route resource.
//
// This resource corresponds to the [route type in the GTFS static
// specification](https://developers.google.com/transit/gtfs/reference#routestxt).
// Most of the fields in the resource come directly from the `routes.txt` table.
// Transiter adds some additional related fields (agency, alerts)
//
//	and computed fields (estimated headway, service maps).
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the route. This is the `route_id` column in `routes.txt`.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the route resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// System corresponding to this route.
	// This is the parent resource in Transiter's resource hierarchy.
	System *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	// Short name of the route. This is the `route_short_name` column in `routes.txt`.
	ShortName *string `protobuf:"bytes,4,opt,name=short_name,json=shortName,proto3,oneof" json:"short_name,omitempty"`
	// Long name of the route. This is the `route_long_name` column in `routes.txt`.
	LongName *string `protobuf:"bytes,5,opt,name=long_name,json=longName,proto3,oneof" json:"long_name,omitempty"`
	// Color of the route. This is the `route_color` column in `routes.txt`.
	Color string `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`
	// Text color of the route. This is the `route_text_color` column in `routes.txt`.
	TextColor string `protobuf:"bytes,7,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// Description of the route. This is the `route_desc` column in `routes.txt`.
	Description *string `protobuf:"bytes,8,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// URL of a web page about the route. This is the `route_url` column in `routes.txt`.
	Url *string `protobuf:"bytes,9,opt,name=url,proto3,oneof" json:"url,omitempty"`
	// Sort order of the route. This is the `route_sort_order` column in `routes.txt`.
	SortOrder *int32 `protobuf:"varint,10,opt,name=sort_order,json=sortOrder,proto3,oneof" json:"sort_order,omitempty"`
	// Continuous pickup policy. This is the `continuous_pickup` column in `routes.txt`.
	ContinuousPickup Route_ContinuousPolicy `protobuf:"varint,11,opt,name=continuous_pickup,json=continuousPickup,proto3,enum=Route_ContinuousPolicy" json:"continuous_pickup,omitempty"`
	// Continuous dropoff policy. This is the `continuous_dropoff` column in `routes.txt`.
	ContinuousDropOff Route_ContinuousPolicy `protobuf:"varint,12,opt,name=continuous_drop_off,json=continuousDropOff,proto3,enum=Route_ContinuousPolicy" json:"continuous_drop_off,omitempty"`
	// Type of the route. This is the `route_type` column in `routes.txt`.
	Type Route_Type `protobuf:"varint,13,opt,name=type,proto3,enum=Route_Type" json:"type,omitempty"`
	// Agency this route is associated to.
	//
	// This is determined using the `agency_id` column in `routes.txt`.
	Agency *Agency_Reference `protobuf:"bytes,14,opt,name=agency,proto3" json:"agency,omitempty"`
	// Active alerts for this route.
	//
	// These are determined using the `informed_entity` field in
	// the [GTFS realtime alerts
	// message](https://developers.google.com/transit/gtfs-realtime/reference#message-alert).
	Alerts []*Alert_Reference `protobuf:"bytes,15,rep,name=alerts,proto3" json:"alerts,omitempty"`
	// An estimate of the interval of time between consecutive realtime trips, in seconds.
	//
	// If there is insufficient data to compute an estimate, the field will be empty.
	//
	// The estimate is computed as follows.
	// For each stop that has realtime trips for the route,
	//
	//	the list of arrival times for those trips is examined.
	//
	// The difference between consecutive arrival times is calculated.
	// If there are `N` trips, there will be `N-1` such arrival time diffs.
	// The estimated headway is the average of these diffs across
	// all stops.
	EstimatedHeadway *int32 `protobuf:"varint,16,opt,name=estimated_headway,json=estimatedHeadway,proto3,oneof" json:"estimated_headway,omitempty"`
	// List of service maps for this route.
	ServiceMaps []*Route_ServiceMap `protobuf:"bytes,17,rep,name=service_maps,json=serviceMaps,proto3" json:"service_maps,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34}
}

func (x *Route) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Route) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Route) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Route) GetShortName() string {
	if x != nil && x.ShortName != nil {
		return *x.ShortName
	}
	return ""
}

func (x *Route) GetLongName() string {
	if x != nil && x.LongName != nil {
		return *x.LongName
	}
	return ""
}

func (x *Route) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Route) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *Route) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Route) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Route) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *Route) GetContinuousPickup() Route_ContinuousPolicy {
	if x != nil {
		return x.ContinuousPickup
	}
	return Route_ALLOWED
}

func (x *Route) GetContinuousDropOff() Route_ContinuousPolicy {
	if x != nil {
		return x.ContinuousDropOff
	}
	return Route_ALLOWED
}

func (x *Route) GetType() Route_Type {
	if x != nil {
		return x.Type
	}
	return Route_LIGHT_RAIL
}

func (x *Route) GetAgency() *Agency_Reference {
	if x != nil {
		return x.Agency
	}
	return nil
}

func (x *Route) GetAlerts() []*Alert_Reference {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Route) GetEstimatedHeadway() int32 {
	if x != nil && x.EstimatedHeadway != nil {
		return *x.EstimatedHeadway
	}
	return 0
}

func (x *Route) GetServiceMaps() []*Route_ServiceMap {
	if x != nil {
		return x.ServiceMaps
	}
	return nil
}

// The feed resource.
//
// Each feed is defined in the system configuration file.
// Feeds are included in the public API because there are non-admin use-cases for this resource.
// For example, an app might publish the staleness of realtime data
//
//	by checking for the last succesful feed update.
//
// More detailed information on a feed -- its full configuration, and the
//
//	current status of its periodic updates -- can be retrieved through the admin API.
type Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the feed, as specified in the system configuration file.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the feed resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// System corresponding to this feed.
	// This is the parent resource in Transiter's resource hierarchy.
	System *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	// Updates for this feed.
	Updates *ChildResources `protobuf:"bytes,4,opt,name=updates,proto3" json:"updates,omitempty"`
}

func (x *Feed) Reset() {
	*x = Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{35}
}

func (x *Feed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feed) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Feed) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Feed) GetUpdates() *ChildResources {
	if x != nil {
		return x.Updates
	}
	return nil
}

// The Agency resource.
//
// This resource corresponds to the [agency type in the GTFS static
// specification](https://developers.google.com/transit/gtfs/reference#agencytxt).
// Most of the fields in the resource come directly from the `agency.txt` table.
// Transiter adds some additional related fields (alerts).
type Agency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the agency. This is the `agency_id` column in `agency.txt`.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the agency resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// System corresponding to this agency.
	// This is the parent resource in Transiter's resource hierarchy.
	System *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	// Name of the agency. This is the `agency_name` column in `agency.txt`.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// URL of the agency. This is the `agency_url` column in `agency.txt`.
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// Timezone of the agency. This is the `agency_timezone` column in `agency.txt`.
	Timezone string `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// Language of the agency. This is the `agency_lang` column in `agency.txt`.
	Language *string `protobuf:"bytes,7,opt,name=language,proto3,oneof" json:"language,omitempty"`
	// Phone number of the agency. This is the `agency_phone` column in `agency.txt`.
	Phone *string `protobuf:"bytes,8,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	// URL where tickets for the agency's services ban be bought.
	// This is the `agency_fare_url` column in `agency.txt`.
	FareUrl *string `protobuf:"bytes,9,opt,name=fare_url,json=fareUrl,proto3,oneof" json:"fare_url,omitempty"`
	// Email address of the agency. This is the `agency_email` column in `agency.txt`.
	Email  *string            `protobuf:"bytes,10,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Routes []*Route_Reference `protobuf:"bytes,11,rep,name=routes,proto3" json:"routes,omitempty"`
	// List of active alerts for the agency.
	//
	// These are determined using the `informed_entity` field in
	// the [GTFS realtime alerts
	// message](https://developers.google.com/transit/gtfs-realtime/reference#message-alert).
	Alerts []*Alert_Reference `protobuf:"bytes,12,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *Agency) Reset() {
	*x = Agency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agency) ProtoMessage() {}

func (x *Agency) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agency.ProtoReflect.Descriptor instead.
func (*Agency) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{36}
}

func (x *Agency) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Agency) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Agency) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Agency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agency) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Agency) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Agency) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Agency) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *Agency) GetFareUrl() string {
	if x != nil && x.FareUrl != nil {
		return *x.FareUrl
	}
	return ""
}

func (x *Agency) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *Agency) GetRoutes() []*Route_Reference {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Agency) GetAlerts() []*Alert_Reference {
	if x != nil {
		return x.Alerts
	}
	return nil
}

// The Alert resource.
//
// This resource corresponds to the [alert type in the GTFS realtime
// specification](https://developers.google.com/transit/gtfs-realtime/reference#message-alert).
//
// TODO; alphabetize the messages
type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the alert. This corresponds to the [ID field in the feed entity
	// message](https://developers.google.com/transit/gtfs-realtime/reference#message-feedentity)
	// corresponding to the alert.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the alert resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// System corresponding to this alert.
	// This is the parent resource in Transiter's resource hierarchy.
	System *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	// Cause of the alert. This corresponds to the `cause` field in the realtime alert message.
	Cause Alert_Cause `protobuf:"varint,4,opt,name=cause,proto3,enum=Alert_Cause" json:"cause,omitempty"`
	// Effect of the alert. This corresponds to the `effect` field in the realtime alert message.
	Effect Alert_Effect `protobuf:"varint,5,opt,name=effect,proto3,enum=Alert_Effect" json:"effect,omitempty"`
	// The current active period, if the alert is currently active.
	// If the alert is not active this is empty.
	CurrentActivePeriod *Alert_ActivePeriod `protobuf:"bytes,6,opt,name=current_active_period,json=currentActivePeriod,proto3,oneof" json:"current_active_period,omitempty"`
	// All active periods for this alert.
	// Transiter guarantees that these active periods have no overlap.
	AllActivePeriods []*Alert_ActivePeriod `protobuf:"bytes,7,rep,name=all_active_periods,json=allActivePeriods,proto3" json:"all_active_periods,omitempty"`
	// Header of the alert, in zero or more languages.
	// This corresponds to the `header_text` field in the realtime alert message.
	Header []*Alert_Text `protobuf:"bytes,8,rep,name=header,proto3" json:"header,omitempty"`
	// Description of the alert, in zero or more languages.
	// This corresponds to the `description_text` field in the realtime alert message.
	Description []*Alert_Text `protobuf:"bytes,9,rep,name=description,proto3" json:"description,omitempty"`
	// URL for additional information about the alert, in zero or more languages.
	// This corresponds to the `url` field in the realtime alert message.
	Url []*Alert_Text `protobuf:"bytes,10,rep,name=url,proto3" json:"url,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Alert) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Alert) GetCause() Alert_Cause {
	if x != nil {
		return x.Cause
	}
	return Alert_UNKNOWN_CAUSE
}

func (x *Alert) GetEffect() Alert_Effect {
	if x != nil {
		return x.Effect
	}
	return Alert_UNKNOWN_EFFECT
}

func (x *Alert) GetCurrentActivePeriod() *Alert_ActivePeriod {
	if x != nil {
		return x.CurrentActivePeriod
	}
	return nil
}

func (x *Alert) GetAllActivePeriods() []*Alert_ActivePeriod {
	if x != nil {
		return x.AllActivePeriods
	}
	return nil
}

func (x *Alert) GetHeader() []*Alert_Text {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Alert) GetDescription() []*Alert_Text {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Alert) GetUrl() []*Alert_Text {
	if x != nil {
		return x.Url
	}
	return nil
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: id, system, resource
	// Probably will use the pk of the DB row for the ID
	FromStop        *Stop_Reference `protobuf:"bytes,4,opt,name=from_stop,json=fromStop,proto3" json:"from_stop,omitempty"`
	ToStop          *Stop_Reference `protobuf:"bytes,5,opt,name=to_stop,json=toStop,proto3" json:"to_stop,omitempty"`
	Type            Transfer_Type   `protobuf:"varint,6,opt,name=type,proto3,enum=Transfer_Type" json:"type,omitempty"`
	MinTransferTime *int32          `protobuf:"varint,7,opt,name=min_transfer_time,json=minTransferTime,proto3,oneof" json:"min_transfer_time,omitempty"`
	Distance        *int32          `protobuf:"varint,8,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{38}
}

func (x *Transfer) GetFromStop() *Stop_Reference {
	if x != nil {
		return x.FromStop
	}
	return nil
}

func (x *Transfer) GetToStop() *Stop_Reference {
	if x != nil {
		return x.ToStop
	}
	return nil
}

func (x *Transfer) GetType() Transfer_Type {
	if x != nil {
		return x.Type
	}
	return Transfer_RECOMMENDED
}

func (x *Transfer) GetMinTransferTime() int32 {
	if x != nil && x.MinTransferTime != nil {
		return *x.MinTransferTime
	}
	return 0
}

func (x *Transfer) GetDistance() int32 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// The feed update resource.
//
// Each feed update event
//
//	-- triggered manually though the admin API, or automatically by the scheduler --
//
// generates a feed update resource.
// This resource is updated as the feed update progresses.
// A background task in Transiter periodically garbage collects old updates.
type FeedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the feed update. This is the primary key of the associated Postgres
	// database row so it's actually globally unique.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Generic metadata about the feed update resource.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// Feed corresponding to this update.
	// This is the parent resource in Transiter's resource hierarchy.
	Feed *Feed_Reference `protobuf:"bytes,3,opt,name=feed,proto3" json:"feed,omitempty"`
	// Unix timestamp of when the update started.
	StartedAt int64 `protobuf:"varint,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Whether the update has finished. If false, the update is still in progress.
	Finished bool `protobuf:"varint,5,opt,name=finished,proto3" json:"finished,omitempty"`
	// Unix timestamp of when the update finished.
	// Only populated if the update is finished.
	FinishedAt *int64 `protobuf:"varint,6,opt,name=finished_at,json=finishedAt,proto3,oneof" json:"finished_at,omitempty"`
	// Result of the update.
	// Only populated if the update is finished.
	Result *FeedUpdate_Result `protobuf:"varint,7,opt,name=result,proto3,enum=FeedUpdate_Result,oneof" json:"result,omitempty"`
	// Number of bytes in the downloaded feed data.
	// Only populated if the update succesfully downloaded the data.
	ContentLength *int32 `protobuf:"varint,8,opt,name=content_length,json=contentLength,proto3,oneof" json:"content_length,omitempty"`
	// Hash of the downloaded feed data. This is used to skip updates
	// if the feed data hasn't changed.
	// Only populated if the update succesfully downloaded the data.
	ContentHash *string `protobuf:"bytes,9,opt,name=content_hash,json=contentHash,proto3,oneof" json:"content_hash,omitempty"`
	// Error message of the update.
	// Only populated if the update finished in an error
	ErrorMessage *string `protobuf:"bytes,10,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
}

func (x *FeedUpdate) Reset() {
	*x = FeedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedUpdate) ProtoMessage() {}

func (x *FeedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedUpdate.ProtoReflect.Descriptor instead.
func (*FeedUpdate) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{39}
}

func (x *FeedUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeedUpdate) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *FeedUpdate) GetFeed() *Feed_Reference {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *FeedUpdate) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *FeedUpdate) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *FeedUpdate) GetFinishedAt() int64 {
	if x != nil && x.FinishedAt != nil {
		return *x.FinishedAt
	}
	return 0
}

func (x *FeedUpdate) GetResult() FeedUpdate_Result {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return FeedUpdate_UPDATED
}

func (x *FeedUpdate) GetContentLength() int32 {
	if x != nil && x.ContentLength != nil {
		return *x.ContentLength
	}
	return 0
}

func (x *FeedUpdate) GetContentHash() string {
	if x != nil && x.ContentHash != nil {
		return *x.ContentHash
	}
	return ""
}

func (x *FeedUpdate) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// Message containing version information about a Transiter binary.
type EntrypointReply_TransiterDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version of the Transiter binary this instance is running.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// URL of the Transiter GitHub respository.
	Href string `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	// Information about the CI build invocation that built this Transiter binary.
	Build *EntrypointReply_TransiterDetails_Build `protobuf:"bytes,3,opt,name=build,proto3,oneof" json:"build,omitempty"`
}

func (x *EntrypointReply_TransiterDetails) Reset() {
	*x = EntrypointReply_TransiterDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply_TransiterDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply_TransiterDetails) ProtoMessage() {}

func (x *EntrypointReply_TransiterDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply_TransiterDetails.ProtoReflect.Descriptor instead.
func (*EntrypointReply_TransiterDetails) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1, 0}
}

func (x *EntrypointReply_TransiterDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails) GetBuild() *EntrypointReply_TransiterDetails_Build {
	if x != nil {
		return x.Build
	}
	return nil
}

// Message containing information about a specific Transiter CI build.
type EntrypointReply_TransiterDetails_Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The GitHub build number.
	Number string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	// Time the binary was built, in the form of a human readable string.
	BuiltAt string `protobuf:"bytes,4,opt,name=built_at,json=builtAt,proto3" json:"built_at,omitempty"`
	// Time the binary was built, in the form of a Unix timestamp.
	BuiltAtTimestamp string `protobuf:"bytes,5,opt,name=built_at_timestamp,json=builtAtTimestamp,proto3" json:"built_at_timestamp,omitempty"`
	// Hash of the Git commit that the binary was built at.
	GitCommitHash string `protobuf:"bytes,6,opt,name=git_commit_hash,json=gitCommitHash,proto3" json:"git_commit_hash,omitempty"`
	// URL of the GitHub actions CI run.
	Href string `protobuf:"bytes,7,opt,name=href,proto3" json:"href,omitempty"`
}

func (x *EntrypointReply_TransiterDetails_Build) Reset() {
	*x = EntrypointReply_TransiterDetails_Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply_TransiterDetails_Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply_TransiterDetails_Build) ProtoMessage() {}

func (x *EntrypointReply_TransiterDetails_Build) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply_TransiterDetails_Build.ProtoReflect.Descriptor instead.
func (*EntrypointReply_TransiterDetails_Build) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *EntrypointReply_TransiterDetails_Build) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetBuiltAt() string {
	if x != nil {
		return x.BuiltAt
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetBuiltAtTimestamp() string {
	if x != nil {
		return x.BuiltAtTimestamp
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetGitCommitHash() string {
	if x != nil {
		return x.GitCommitHash
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

// Reference is the reference type for the system resource.
type System_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *System_Reference) Reset() {
	*x = System_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System_Reference) ProtoMessage() {}

func (x *System_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System_Reference.ProtoReflect.Descriptor instead.
func (*System_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27, 0}
}

func (x *System_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *System_Reference) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

// Message describing the service maps view in stops.
//
// See the service maps documentation for more information on this
// message and the associated field.
type Stop_ServiceMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Config ID of the service map, as specified in the system configuration file.
	ConfigId string `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	// List of routes which call at this stop.
	//
	// This list may be empty, in which case the stop has no service in the service map.
	Routes []*Route_Reference `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *Stop_ServiceMap) Reset() {
	*x = Stop_ServiceMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop_ServiceMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop_ServiceMap) ProtoMessage() {}

func (x *Stop_ServiceMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop_ServiceMap.ProtoReflect.Descriptor instead.
func (*Stop_ServiceMap) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30, 0}
}

func (x *Stop_ServiceMap) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *Stop_ServiceMap) GetRoutes() []*Route_Reference {
	if x != nil {
		return x.Routes
	}
	return nil
}

// Message describing a headsign rule.
type Stop_HeadsignRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Stop the rule is for.
	Stop *Stop_Reference `protobuf:"bytes,1,opt,name=stop,proto3" json:"stop,omitempty"`
	// Priority of the rule (lower is higher priority).
	Priority int32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	// NYCT track.
	Track *string `protobuf:"bytes,3,opt,name=track,proto3,oneof" json:"track,omitempty"`
	// Headsign.
	Headsign string `protobuf:"bytes,4,opt,name=headsign,proto3" json:"headsign,omitempty"`
}

func (x *Stop_HeadsignRule) Reset() {
	*x = Stop_HeadsignRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop_HeadsignRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop_HeadsignRule) ProtoMessage() {}

func (x *Stop_HeadsignRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop_HeadsignRule.ProtoReflect.Descriptor instead.
func (*Stop_HeadsignRule) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30, 1}
}

func (x *Stop_HeadsignRule) GetStop() *Stop_Reference {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *Stop_HeadsignRule) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Stop_HeadsignRule) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *Stop_HeadsignRule) GetHeadsign() string {
	if x != nil {
		return x.Headsign
	}
	return ""
}

// Reference is the reference type for the stop resource.
type Stop_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource *Resource         `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	System   *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	Name     *string           `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *Stop_Reference) Reset() {
	*x = Stop_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop_Reference) ProtoMessage() {}

func (x *Stop_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop_Reference.ProtoReflect.Descriptor instead.
func (*Stop_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30, 2}
}

func (x *Stop_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stop_Reference) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Stop_Reference) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Stop_Reference) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Message describing the arrival or departure time of a stop time.
// This corresponds to the [GTFS realtime `StopTimeEvent`
// message](https://developers.google.com/transit/gtfs-realtime/reference#message-stoptimeevent).
type StopTime_EstimatedTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        *int64 `protobuf:"varint,1,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Delay       *int32 `protobuf:"varint,2,opt,name=delay,proto3,oneof" json:"delay,omitempty"`
	Uncertainty *int32 `protobuf:"varint,3,opt,name=uncertainty,proto3,oneof" json:"uncertainty,omitempty"`
}

func (x *StopTime_EstimatedTime) Reset() {
	*x = StopTime_EstimatedTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTime_EstimatedTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTime_EstimatedTime) ProtoMessage() {}

func (x *StopTime_EstimatedTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTime_EstimatedTime.ProtoReflect.Descriptor instead.
func (*StopTime_EstimatedTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{31, 0}
}

func (x *StopTime_EstimatedTime) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *StopTime_EstimatedTime) GetDelay() int32 {
	if x != nil && x.Delay != nil {
		return *x.Delay
	}
	return 0
}

func (x *StopTime_EstimatedTime) GetUncertainty() int32 {
	if x != nil && x.Uncertainty != nil {
		return *x.Uncertainty
	}
	return 0
}

// Reference is the reference type for the trip resource.
type Trip_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource    *Resource          `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Route       *Route_Reference   `protobuf:"bytes,3,opt,name=route,proto3" json:"route,omitempty"`
	Destination *Stop_Reference    `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	Vehicle     *Vehicle_Reference `protobuf:"bytes,5,opt,name=vehicle,proto3,oneof" json:"vehicle,omitempty"`
}

func (x *Trip_Reference) Reset() {
	*x = Trip_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip_Reference) ProtoMessage() {}

func (x *Trip_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip_Reference.ProtoReflect.Descriptor instead.
func (*Trip_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{32, 0}
}

func (x *Trip_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trip_Reference) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Trip_Reference) GetRoute() *Route_Reference {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *Trip_Reference) GetDestination() *Stop_Reference {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Trip_Reference) GetVehicle() *Vehicle_Reference {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

// Reference is the reference type for the vehicle resource.
type Vehicle_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Vehicle_Reference) Reset() {
	*x = Vehicle_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle_Reference) ProtoMessage() {}

func (x *Vehicle_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle_Reference.ProtoReflect.Descriptor instead.
func (*Vehicle_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{33, 0}
}

func (x *Vehicle_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Message describing the service maps view in routes.
//
// See the service maps documentation for more information on this
// message and the associated field.
type Route_ServiceMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Config ID of the service map, as specified in the system configuration file.
	ConfigId string `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	// Ordered list of stop at which this route calls.
	//
	// This list may be empty, in which case the route has no service in the service map.
	Stops []*Stop_Reference `protobuf:"bytes,2,rep,name=stops,proto3" json:"stops,omitempty"`
}

func (x *Route_ServiceMap) Reset() {
	*x = Route_ServiceMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route_ServiceMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route_ServiceMap) ProtoMessage() {}

func (x *Route_ServiceMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route_ServiceMap.ProtoReflect.Descriptor instead.
func (*Route_ServiceMap) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 0}
}

func (x *Route_ServiceMap) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *Route_ServiceMap) GetStops() []*Stop_Reference {
	if x != nil {
		return x.Stops
	}
	return nil
}

// Reference is the reference type for the route resource.
type Route_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource *Resource         `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	System   *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	Color    string            `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *Route_Reference) Reset() {
	*x = Route_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route_Reference) ProtoMessage() {}

func (x *Route_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route_Reference.ProtoReflect.Descriptor instead.
func (*Route_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 1}
}

func (x *Route_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Route_Reference) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Route_Reference) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Route_Reference) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// Reference is the reference type for the feed resource.
type Feed_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource *Resource         `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	System   *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *Feed_Reference) Reset() {
	*x = Feed_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed_Reference) ProtoMessage() {}

func (x *Feed_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed_Reference.ProtoReflect.Descriptor instead.
func (*Feed_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{35, 0}
}

func (x *Feed_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feed_Reference) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Feed_Reference) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

// Reference is the reference type for the agency resource.
type Agency_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource *Resource         `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	System   *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	Name     string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Agency_Reference) Reset() {
	*x = Agency_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agency_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agency_Reference) ProtoMessage() {}

func (x *Agency_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agency_Reference.ProtoReflect.Descriptor instead.
func (*Agency_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{36, 0}
}

func (x *Agency_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Agency_Reference) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Agency_Reference) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Agency_Reference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The active period message describes a period when an alert is active.
// It corresponds the the [time range message in the GTFS realtime
// specification](https://developers.google.com/transit/gtfs-realtime/reference#message-timerange).
type Alert_ActivePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unix timestamp of the start time of the active period.
	// If not set, the alert be interpreted
	// as being always active up to the end time.
	StartsAt *int64 `protobuf:"varint,1,opt,name=starts_at,json=startsAt,proto3,oneof" json:"starts_at,omitempty"`
	// Unix timestamp of the end time of the active period.
	// If not set, the alert be interpreted as being indefinitely active.
	EndsAt *int64 `protobuf:"varint,2,opt,name=ends_at,json=endsAt,proto3,oneof" json:"ends_at,omitempty"`
}

func (x *Alert_ActivePeriod) Reset() {
	*x = Alert_ActivePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_ActivePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_ActivePeriod) ProtoMessage() {}

func (x *Alert_ActivePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_ActivePeriod.ProtoReflect.Descriptor instead.
func (*Alert_ActivePeriod) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37, 0}
}

func (x *Alert_ActivePeriod) GetStartsAt() int64 {
	if x != nil && x.StartsAt != nil {
		return *x.StartsAt
	}
	return 0
}

func (x *Alert_ActivePeriod) GetEndsAt() int64 {
	if x != nil && x.EndsAt != nil {
		return *x.EndsAt
	}
	return 0
}

// The text message describes an alert header/description/URL in a specified language.
// It corresponds the the [translation message in the GTFS realtime
// specification](https://developers.google.com/transit/gtfs-realtime/reference#message-translation).
type Alert_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Content of the text.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Language of this text.
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Alert_Text) Reset() {
	*x = Alert_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Text) ProtoMessage() {}

func (x *Alert_Text) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Text.ProtoReflect.Descriptor instead.
func (*Alert_Text) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37, 1}
}

func (x *Alert_Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Alert_Text) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// Reference is the reference type for the agency resource.
type Alert_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource *Resource         `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	System   *System_Reference `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	Cause    Alert_Cause       `protobuf:"varint,4,opt,name=cause,proto3,enum=Alert_Cause" json:"cause,omitempty"`
	Effect   Alert_Effect      `protobuf:"varint,5,opt,name=effect,proto3,enum=Alert_Effect" json:"effect,omitempty"`
}

func (x *Alert_Reference) Reset() {
	*x = Alert_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Reference) ProtoMessage() {}

func (x *Alert_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Reference.ProtoReflect.Descriptor instead.
func (*Alert_Reference) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37, 2}
}

func (x *Alert_Reference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert_Reference) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Alert_Reference) GetSystem() *System_Reference {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Alert_Reference) GetCause() Alert_Cause {
	if x != nil {
		return x.Cause
	}
	return Alert_UNKNOWN_CAUSE
}

func (x *Alert_Reference) GetEffect() Alert_Effect {
	if x != nil {
		return x.Effect
	}
	return Alert_UNKNOWN_EFFECT
}

var File_api_public_proto protoreflect.FileDescriptor

var file_api_public_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x13, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb5, 0x03, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x07, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x42, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x48, 0x00, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x1a, 0xa4, 0x01, 0x0a,
	0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x75, 0x69,
	0x6c, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x41, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x72, 0x65, 0x66, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x22, 0xf8, 0x04, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x6f, 0x6e, 0x6c,
	0x79, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6f, 0x6e,
	0x6c, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x49, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6b,
	0x69, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x6d,
	0x61, 0x78, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x05, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x22, 0x22, 0x0a, 0x0a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x22, 0x57, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70,
	0x73, 0x12, 0x1c, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73,
	0x6b, 0x69, 0x70, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70,
	0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x6b, 0x69, 0x70, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6b, 0x69,
	0x70, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x22, 0xb5, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x6b,
	0x69, 0x70, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x77, 0x61,
	0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x61, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x72,
	0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x72, 0x69, 0x70,
	0x52, 0x05, 0x74, 0x72, 0x69, 0x70, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x49, 0x64, 0x22, 0x61, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x05,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x22, 0x3d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x22, 0x88, 0x04, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x66,
	0x65, 0x65, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x05, 0x66, 0x65, 0x65,
	0x64, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6f,
	0x70, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x1a, 0x42, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x74, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x53, 0x54,
	0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x22, 0x40, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x04, 0x68,
	0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65,
	0x66, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0x48, 0x0a,
	0x0e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0x9d, 0x0b, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06,
	0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x07, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0b, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x1f, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x13, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x12, 0x77,
	0x68, 0x65, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x28, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x12, 0x39, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x68, 0x65,
	0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x53, 0x0a, 0x0a, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x1a, 0x90, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x1a, 0x8f, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4e, 0x43, 0x45,
	0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x49, 0x43, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d,
	0x42, 0x4f, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10, 0x04, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xde, 0x03, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x72, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x74, 0x72, 0x69, 0x70, 0x12, 0x31,
	0x0a, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x2e,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73,
	0x69, 0x67, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x88, 0x01,
	0x01, 0x1a, 0x8d, 0x01, 0x0a, 0x0d, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x75, 0x6e, 0x63, 0x65, 0x72,
	0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0b,
	0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74,
	0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x83, 0x04, 0x0a, 0x04, 0x54, 0x72, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x01, 0x52, 0x07, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x1a, 0xdc, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x26,
	0x0a, 0x07, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x1b, 0x0a, 0x09, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe4, 0x09, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x6e,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x04, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x44, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x47, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x6f, 0x75, 0x73, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x66, 0x66, 0x12, 0x1f,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x05, 0x52, 0x10, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64,
	0x77, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x1a, 0x50, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x1a, 0x83,
	0x01, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f,
	0x75, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x57, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f,
	0x41, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4f, 0x52,
	0x44, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x44, 0x52, 0x49, 0x56,
	0x45, 0x52, 0x10, 0x03, 0x22, 0x9c, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x52, 0x41, 0x49, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x55, 0x42, 0x57, 0x41, 0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41, 0x49,
	0x4c, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55, 0x53, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x46, 0x45, 0x52, 0x52, 0x59, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x54, 0x52, 0x41, 0x4d, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x45, 0x52, 0x49, 0x41,
	0x4c, 0x5f, 0x4c, 0x49, 0x46, 0x54, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x55, 0x4e, 0x49,
	0x43, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x52, 0x4f, 0x4c, 0x4c,
	0x45, 0x59, 0x5f, 0x42, 0x55, 0x53, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x4f, 0x4e, 0x4f,
	0x52, 0x41, 0x49, 0x4c, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x22, 0x82, 0x02,
	0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x29, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x1a, 0x6d, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x22, 0xa9, 0x04, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x66, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x07, 0x66, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x1a, 0x81, 0x01, 0x0a,
	0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x72, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xea,
	0x09, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x4c, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x13, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x68, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06,
	0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x73,
	0x5f, 0x61, 0x74, 0x1a, 0x36, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0xb8, 0x01, 0x0a, 0x09,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x05, 0x63,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x05, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x41, 0x55, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x55,
	0x53, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x45, 0x43, 0x48, 0x4e, 0x49, 0x43, 0x41,
	0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x45, 0x4d, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4b, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4d, 0x4f, 0x4e,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43,
	0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x4f, 0x4c, 0x49,
	0x44, 0x41, 0x59, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45,
	0x44, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x45, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x10,
	0x0c, 0x22, 0xdd, 0x01, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x54, 0x4f, 0x55, 0x52, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x44, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x4f,
	0x50, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f,
	0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10,
	0x0b, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xc3, 0x02, 0x0a, 0x08,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x22, 0x46, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x54, 0x49, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45,
	0x51, 0x55, 0x49, 0x52, 0x45, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x4e, 0x4f, 0x5f, 0x50, 0x4f, 0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0xf9, 0x04, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x22, 0xad, 0x01, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x54, 0x5f, 0x4e, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4d, 0x50, 0x54,
	0x59, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x04, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x52,
	0x53, 0x45, 0x52, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x52, 0x53, 0x45, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xe6, 0x0b,
	0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x3d, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x03, 0x12, 0x01, 0x2f, 0x12, 0x47, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x10,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x45, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x12, 0x14, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x5f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x53, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70,
	0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x22, 0x2c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x73,
	0x2f, 0x7b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x10, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x06, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x12, 0x26, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f,
	0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x73,
	0x12, 0x61, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x12, 0x0f, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x54,
	0x72, 0x69, 0x70, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x69, 0x70, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x63, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x53, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x12, 0x1a, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x12, 0x4f, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x65,
	0x65, 0x64, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x77, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66,
	0x65, 0x65, 0x64, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x66, 0x65, 0x6e, 0x6e, 0x65,
	0x6c, 0x6c, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_public_proto_rawDescOnce sync.Once
	file_api_public_proto_rawDescData = file_api_public_proto_rawDesc
)

func file_api_public_proto_rawDescGZIP() []byte {
	file_api_public_proto_rawDescOnce.Do(func() {
		file_api_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_public_proto_rawDescData)
	})
	return file_api_public_proto_rawDescData
}

var file_api_public_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_api_public_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_api_public_proto_goTypes = []interface{}{
	(ListStopsRequest_SearchMode)(0),               // 0: ListStopsRequest.SearchMode
	(System_Status)(0),                             // 1: System.Status
	(Stop_Type)(0),                                 // 2: Stop.Type
	(Route_ContinuousPolicy)(0),                    // 3: Route.ContinuousPolicy
	(Route_Type)(0),                                // 4: Route.Type
	(Alert_Cause)(0),                               // 5: Alert.Cause
	(Alert_Effect)(0),                              // 6: Alert.Effect
	(Transfer_Type)(0),                             // 7: Transfer.Type
	(FeedUpdate_Result)(0),                         // 8: FeedUpdate.Result
	(*EntrypointRequest)(nil),                      // 9: EntrypointRequest
	(*EntrypointReply)(nil),                        // 10: EntrypointReply
	(*ListSystemsRequest)(nil),                     // 11: ListSystemsRequest
	(*ListSystemsReply)(nil),                       // 12: ListSystemsReply
	(*GetSystemRequest)(nil),                       // 13: GetSystemRequest
	(*ListAgenciesRequest)(nil),                    // 14: ListAgenciesRequest
	(*ListAgenciesReply)(nil),                      // 15: ListAgenciesReply
	(*GetAgencyRequest)(nil),                       // 16: GetAgencyRequest
	(*ListStopsRequest)(nil),                       // 17: ListStopsRequest
	(*ListStopsReply)(nil),                         // 18: ListStopsReply
	(*GetStopRequest)(nil),                         // 19: GetStopRequest
	(*ListRoutesRequest)(nil),                      // 20: ListRoutesRequest
	(*ListRoutesReply)(nil),                        // 21: ListRoutesReply
	(*GetRouteRequest)(nil),                        // 22: GetRouteRequest
	(*ListTripsRequest)(nil),                       // 23: ListTripsRequest
	(*ListTripsReply)(nil),                         // 24: ListTripsReply
	(*ListAlertsRequest)(nil),                      // 25: ListAlertsRequest
	(*ListAlertsReply)(nil),                        // 26: ListAlertsReply
	(*GetAlertRequest)(nil),                        // 27: GetAlertRequest
	(*GetTripRequest)(nil),                         // 28: GetTripRequest
	(*ListFeedsRequest)(nil),                       // 29: ListFeedsRequest
	(*ListFeedsReply)(nil),                         // 30: ListFeedsReply
	(*ListFeedUpdatesRequest)(nil),                 // 31: ListFeedUpdatesRequest
	(*ListFeedUpdatesReply)(nil),                   // 32: ListFeedUpdatesReply
	(*GetFeedRequest)(nil),                         // 33: GetFeedRequest
	(*ListTransfersRequest)(nil),                   // 34: ListTransfersRequest
	(*ListTransfersReply)(nil),                     // 35: ListTransfersReply
	(*System)(nil),                                 // 36: System
	(*Resource)(nil),                               // 37: Resource
	(*ChildResources)(nil),                         // 38: ChildResources
	(*Stop)(nil),                                   // 39: Stop
	(*StopTime)(nil),                               // 40: StopTime
	(*Trip)(nil),                                   // 41: Trip
	(*Vehicle)(nil),                                // 42: Vehicle
	(*Route)(nil),                                  // 43: Route
	(*Feed)(nil),                                   // 44: Feed
	(*Agency)(nil),                                 // 45: Agency
	(*Alert)(nil),                                  // 46: Alert
	(*Transfer)(nil),                               // 47: Transfer
	(*FeedUpdate)(nil),                             // 48: FeedUpdate
	(*EntrypointReply_TransiterDetails)(nil),       // 49: EntrypointReply.TransiterDetails
	(*EntrypointReply_TransiterDetails_Build)(nil), // 50: EntrypointReply.TransiterDetails.Build
	(*System_Reference)(nil),                       // 51: System.Reference
	(*Stop_ServiceMap)(nil),                        // 52: Stop.ServiceMap
	(*Stop_HeadsignRule)(nil),                      // 53: Stop.HeadsignRule
	(*Stop_Reference)(nil),                         // 54: Stop.Reference
	(*StopTime_EstimatedTime)(nil),                 // 55: StopTime.EstimatedTime
	(*Trip_Reference)(nil),                         // 56: Trip.Reference
	(*Vehicle_Reference)(nil),                      // 57: Vehicle.Reference
	(*Route_ServiceMap)(nil),                       // 58: Route.ServiceMap
	(*Route_Reference)(nil),                        // 59: Route.Reference
	(*Feed_Reference)(nil),                         // 60: Feed.Reference
	(*Agency_Reference)(nil),                       // 61: Agency.Reference
	(*Alert_ActivePeriod)(nil),                     // 62: Alert.ActivePeriod
	(*Alert_Text)(nil),                             // 63: Alert.Text
	(*Alert_Reference)(nil),                        // 64: Alert.Reference
}
var file_api_public_proto_depIdxs = []int32{
	49,  // 0: EntrypointReply.transiter:type_name -> EntrypointReply.TransiterDetails
	38,  // 1: EntrypointReply.systems:type_name -> ChildResources
	36,  // 2: ListSystemsReply.systems:type_name -> System
	45,  // 3: ListAgenciesReply.agencies:type_name -> Agency
	0,   // 4: ListStopsRequest.search_mode:type_name -> ListStopsRequest.SearchMode
	39,  // 5: ListStopsReply.stops:type_name -> Stop
	43,  // 6: ListRoutesReply.routes:type_name -> Route
	41,  // 7: ListTripsReply.trips:type_name -> Trip
	46,  // 8: ListAlertsReply.alerts:type_name -> Alert
	44,  // 9: ListFeedsReply.feeds:type_name -> Feed
	48,  // 10: ListFeedUpdatesReply.updates:type_name -> FeedUpdate
	47,  // 11: ListTransfersReply.transfers:type_name -> Transfer
	37,  // 12: System.resource:type_name -> Resource
	1,   // 13: System.status:type_name -> System.Status
	38,  // 14: System.agencies:type_name -> ChildResources
	38,  // 15: System.feeds:type_name -> ChildResources
	38,  // 16: System.routes:type_name -> ChildResources
	38,  // 17: System.stops:type_name -> ChildResources
	38,  // 18: System.transfers:type_name -> ChildResources
	37,  // 19: Stop.resource:type_name -> Resource
	51,  // 20: Stop.system:type_name -> System.Reference
	2,   // 21: Stop.type:type_name -> Stop.Type
	54,  // 22: Stop.parent_stop:type_name -> Stop.Reference
	54,  // 23: Stop.child_stops:type_name -> Stop.Reference
	52,  // 24: Stop.service_maps:type_name -> Stop.ServiceMap
	64,  // 25: Stop.alerts:type_name -> Alert.Reference
	40,  // 26: Stop.stop_times:type_name -> StopTime
	47,  // 27: Stop.transfers:type_name -> Transfer
	53,  // 28: Stop.headsign_rules:type_name -> Stop.HeadsignRule
	54,  // 29: StopTime.stop:type_name -> Stop.Reference
	56,  // 30: StopTime.trip:type_name -> Trip.Reference
	55,  // 31: StopTime.arrival:type_name -> StopTime.EstimatedTime
	55,  // 32: StopTime.departure:type_name -> StopTime.EstimatedTime
	37,  // 33: Trip.resource:type_name -> Resource
	59,  // 34: Trip.route:type_name -> Route.Reference
	57,  // 35: Trip.vehicle:type_name -> Vehicle.Reference
	40,  // 36: Trip.stop_times:type_name -> StopTime
	37,  // 37: Route.resource:type_name -> Resource
	51,  // 38: Route.system:type_name -> System.Reference
	3,   // 39: Route.continuous_pickup:type_name -> Route.ContinuousPolicy
	3,   // 40: Route.continuous_drop_off:type_name -> Route.ContinuousPolicy
	4,   // 41: Route.type:type_name -> Route.Type
	61,  // 42: Route.agency:type_name -> Agency.Reference
	64,  // 43: Route.alerts:type_name -> Alert.Reference
	58,  // 44: Route.service_maps:type_name -> Route.ServiceMap
	37,  // 45: Feed.resource:type_name -> Resource
	51,  // 46: Feed.system:type_name -> System.Reference
	38,  // 47: Feed.updates:type_name -> ChildResources
	37,  // 48: Agency.resource:type_name -> Resource
	51,  // 49: Agency.system:type_name -> System.Reference
	59,  // 50: Agency.routes:type_name -> Route.Reference
	64,  // 51: Agency.alerts:type_name -> Alert.Reference
	37,  // 52: Alert.resource:type_name -> Resource
	51,  // 53: Alert.system:type_name -> System.Reference
	5,   // 54: Alert.cause:type_name -> Alert.Cause
	6,   // 55: Alert.effect:type_name -> Alert.Effect
	62,  // 56: Alert.current_active_period:type_name -> Alert.ActivePeriod
	62,  // 57: Alert.all_active_periods:type_name -> Alert.ActivePeriod
	63,  // 58: Alert.header:type_name -> Alert.Text
	63,  // 59: Alert.description:type_name -> Alert.Text
	63,  // 60: Alert.url:type_name -> Alert.Text
	54,  // 61: Transfer.from_stop:type_name -> Stop.Reference
	54,  // 62: Transfer.to_stop:type_name -> Stop.Reference
	7,   // 63: Transfer.type:type_name -> Transfer.Type
	37,  // 64: FeedUpdate.resource:type_name -> Resource
	60,  // 65: FeedUpdate.feed:type_name -> Feed.Reference
	8,   // 66: FeedUpdate.result:type_name -> FeedUpdate.Result
	50,  // 67: EntrypointReply.TransiterDetails.build:type_name -> EntrypointReply.TransiterDetails.Build
	37,  // 68: System.Reference.resource:type_name -> Resource
	59,  // 69: Stop.ServiceMap.routes:type_name -> Route.Reference
	54,  // 70: Stop.HeadsignRule.stop:type_name -> Stop.Reference
	37,  // 71: Stop.Reference.resource:type_name -> Resource
	51,  // 72: Stop.Reference.system:type_name -> System.Reference
	37,  // 73: Trip.Reference.resource:type_name -> Resource
	59,  // 74: Trip.Reference.route:type_name -> Route.Reference
	54,  // 75: Trip.Reference.destination:type_name -> Stop.Reference
	57,  // 76: Trip.Reference.vehicle:type_name -> Vehicle.Reference
	54,  // 77: Route.ServiceMap.stops:type_name -> Stop.Reference
	37,  // 78: Route.Reference.resource:type_name -> Resource
	51,  // 79: Route.Reference.system:type_name -> System.Reference
	37,  // 80: Feed.Reference.resource:type_name -> Resource
	51,  // 81: Feed.Reference.system:type_name -> System.Reference
	37,  // 82: Agency.Reference.resource:type_name -> Resource
	51,  // 83: Agency.Reference.system:type_name -> System.Reference
	37,  // 84: Alert.Reference.resource:type_name -> Resource
	51,  // 85: Alert.Reference.system:type_name -> System.Reference
	5,   // 86: Alert.Reference.cause:type_name -> Alert.Cause
	6,   // 87: Alert.Reference.effect:type_name -> Alert.Effect
	9,   // 88: Public.Entrypoint:input_type -> EntrypointRequest
	11,  // 89: Public.ListSystems:input_type -> ListSystemsRequest
	13,  // 90: Public.GetSystem:input_type -> GetSystemRequest
	14,  // 91: Public.ListAgencies:input_type -> ListAgenciesRequest
	16,  // 92: Public.GetAgency:input_type -> GetAgencyRequest
	17,  // 93: Public.ListStops:input_type -> ListStopsRequest
	19,  // 94: Public.GetStop:input_type -> GetStopRequest
	20,  // 95: Public.ListRoutes:input_type -> ListRoutesRequest
	22,  // 96: Public.GetRoute:input_type -> GetRouteRequest
	23,  // 97: Public.ListTrips:input_type -> ListTripsRequest
	28,  // 98: Public.GetTrip:input_type -> GetTripRequest
	25,  // 99: Public.ListAlerts:input_type -> ListAlertsRequest
	27,  // 100: Public.GetAlert:input_type -> GetAlertRequest
	34,  // 101: Public.ListTransfers:input_type -> ListTransfersRequest
	29,  // 102: Public.ListFeeds:input_type -> ListFeedsRequest
	33,  // 103: Public.GetFeed:input_type -> GetFeedRequest
	31,  // 104: Public.ListFeedUpdates:input_type -> ListFeedUpdatesRequest
	10,  // 105: Public.Entrypoint:output_type -> EntrypointReply
	12,  // 106: Public.ListSystems:output_type -> ListSystemsReply
	36,  // 107: Public.GetSystem:output_type -> System
	15,  // 108: Public.ListAgencies:output_type -> ListAgenciesReply
	45,  // 109: Public.GetAgency:output_type -> Agency
	18,  // 110: Public.ListStops:output_type -> ListStopsReply
	39,  // 111: Public.GetStop:output_type -> Stop
	21,  // 112: Public.ListRoutes:output_type -> ListRoutesReply
	43,  // 113: Public.GetRoute:output_type -> Route
	24,  // 114: Public.ListTrips:output_type -> ListTripsReply
	41,  // 115: Public.GetTrip:output_type -> Trip
	26,  // 116: Public.ListAlerts:output_type -> ListAlertsReply
	46,  // 117: Public.GetAlert:output_type -> Alert
	35,  // 118: Public.ListTransfers:output_type -> ListTransfersReply
	30,  // 119: Public.ListFeeds:output_type -> ListFeedsReply
	44,  // 120: Public.GetFeed:output_type -> Feed
	32,  // 121: Public.ListFeedUpdates:output_type -> ListFeedUpdatesReply
	105, // [105:122] is the sub-list for method output_type
	88,  // [88:105] is the sub-list for method input_type
	88,  // [88:88] is the sub-list for extension type_name
	88,  // [88:88] is the sub-list for extension extendee
	0,   // [0:88] is the sub-list for field type_name
}

func init() { file_api_public_proto_init() }
func file_api_public_proto_init() {
	if File_api_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_public_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgenciesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStopsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStopsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTripsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTripsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedUpdatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransfersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransfersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply_TransiterDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply_TransiterDetails_Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop_ServiceMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop_HeadsignRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTime_EstimatedTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route_ServiceMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agency_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_ActivePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_public_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[53].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_public_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_public_proto_goTypes,
		DependencyIndexes: file_api_public_proto_depIdxs,
		EnumInfos:         file_api_public_proto_enumTypes,
		MessageInfos:      file_api_public_proto_msgTypes,
	}.Build()
	File_api_public_proto = out.File
	file_api_public_proto_rawDesc = nil
	file_api_public_proto_goTypes = nil
	file_api_public_proto_depIdxs = nil
}
