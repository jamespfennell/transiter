// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: transfer_queries.sql

package db

import (
	"context"
	"database/sql"
)

const deleteStaleTransfers = `-- name: DeleteStaleTransfers :exec
DELETE FROM transfer
USING feed_update
WHERE 
    feed_update.pk = transfer.source_pk
    AND feed_update.feed_pk = $1
    AND feed_update.pk != $2
`

type DeleteStaleTransfersParams struct {
	FeedPk   int64
	UpdatePk int64
}

func (q *Queries) DeleteStaleTransfers(ctx context.Context, arg DeleteStaleTransfersParams) error {
	_, err := q.db.Exec(ctx, deleteStaleTransfers, arg.FeedPk, arg.UpdatePk)
	return err
}

const insertTransfer = `-- name: InsertTransfer :exec
INSERT INTO transfer
    (system_pk, source_pk, config_source_pk, from_stop_pk, to_stop_pk,
     type, min_transfer_time, distance)
VALUES
    ($1, $2, NULL,
     $3, $4, $5,
     $6, NULL)
`

type InsertTransferParams struct {
	SystemPk        sql.NullInt64
	SourcePk        sql.NullInt64
	FromStopPk      int64
	ToStopPk        int64
	Type            string
	MinTransferTime sql.NullInt32
}

func (q *Queries) InsertTransfer(ctx context.Context, arg InsertTransferParams) error {
	_, err := q.db.Exec(ctx, insertTransfer,
		arg.SystemPk,
		arg.SourcePk,
		arg.FromStopPk,
		arg.ToStopPk,
		arg.Type,
		arg.MinTransferTime,
	)
	return err
}
